<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Открытка — один файл (финальная версия)</title>
  <style>
    :root {
      --card-aspect: 1;
      --radius: 24px;
      --duration: 800ms;
      --easing: cubic-bezier(.2,.8,.2,1);
    }
    * { box-sizing: border-box; }
    html, body {
      height: 100%;
      margin: 0;
      background: radial-gradient(1200px 600px at 30% -10%, #1b1e26 0%, #0e0f12 55%, #0b0c10 100%);
      color: #e7e8ea;
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Helvetica, Arial;
    }
    .wrap {
      position: fixed;
      inset: 0;
      display: grid;
      place-items: center;
      padding: 2vmin;
      gap: 1rem;
    }
    .card {
      perspective: 1600px;
      width: min(96vw, calc(96vh * var(--card-aspect)));
      aspect-ratio: var(--card-aspect);
      max-height: 96vh;
    }
    .card__inner {
      position: relative;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;
      transition: transform var(--duration) var(--easing);
      border-radius: var(--radius);
      box-shadow: 0 12px 50px rgba(0,0,0,.55), 0 2px 8px rgba(0,0,0,.35);
      outline: 1px solid rgba(255,255,255,.06);
      background: #111213;
    }
    .card.is-flipped .card__inner { transform: rotateY(180deg); }
    .side {
      position: absolute;
      inset: 0;
      display: grid;
      place-items: center;
      backface-visibility: hidden;
      -webkit-backface-visibility: hidden;
      overflow: hidden;
      border-radius: var(--radius);
    }
    .side img {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: contain; /* без обрезки */
      user-select: none;
      -webkit-user-drag: none;
      pointer-events: none;
    }
    .side--back { transform: rotateY(180deg); }
    .hint {
      opacity: .85;
      font-size: clamp(12px, 1.8vmin, 16px);
      text-align: center;
      line-height: 1.2;
      backdrop-filter: blur(4px);
      background: rgba(0,0,0,.25);
      border: 1px solid rgba(255,255,255,.08);
      border-radius: 999px;
      padding: .6rem .9rem;
      box-shadow: 0 6px 20px rgba(0,0,0,.35);
    }
    .tap-surface {
      position: absolute;
      inset: 0;
      cursor: pointer;
      border-radius: var(--radius);
      background: transparent;
    }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="card" id="card" aria-live="polite">
      <div class="card__inner">
        <div class="side side--front" aria-label="Лицевая сторона: комикс">
          <!-- Положи front.png рядом с index.html -->
          <img id="frontImg" src="./front.png" alt="Лицевая сторона открытки — комикс" loading="eager" decoding="async" />
        </div>
        <div class="side side--back" aria-label="Обратная сторона: сертификат (финал)">
          <!-- Положи back.png рядом с index.html -->
          <img id="backImg" src="./back.png" alt="Обратная сторона открытки — сертификаты" loading="eager" decoding="async" />
        </div>
        <button class="tap-surface" id="flipBtn" aria-pressed="false" aria-label="Перевернуть открытку"></button>
      </div>
    </div>
    <div class="hint">Нажмите/коснитесь, чтобы перевернуть</div>
  </div>
  <script>
    (function () {
      const root  = document.documentElement;
      const card  = document.getElementById('card');
      const btn   = document.getElementById('flipBtn');
      const front = document.getElementById('frontImg');
      const back  = document.getElementById('backImg');

      function setAspect() {
        const fA = (front.naturalWidth || 1) / (front.naturalHeight || 1);
        const bA = (back.naturalWidth  || 1) / (back.naturalHeight  || 1);
        const diff = Math.abs(fA - bA) / fA;
        const aspect = diff > 0.4 ? (fA + bA) / 2 : fA;
        root.style.setProperty('--card-aspect', aspect.toString());
      }

      function maybeInit() {
        if (front.complete && back.complete && front.naturalWidth && back.naturalWidth) setAspect();
      }

      front.addEventListener('load', maybeInit);
      back.addEventListener('load', maybeInit);
      maybeInit();

      btn.addEventListener('click', () => {
        card.classList.toggle('is-flipped');
        btn.setAttribute('aria-pressed', card.classList.contains('is-flipped'));
      }, { passive: true });

      document.addEventListener('keydown', (e) => {
        if (e.key === ' ' || e.key === 'Enter') { 
          e.preventDefault(); 
          btn.click(); 
        }
      });
    })();
  </script>
</body>
</html>
